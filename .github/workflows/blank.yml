name: CI/CD
on:
  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Configure NuGet
      run: |
        dotnet nuget add source https://nuget.pkg.github.com/Yuman-net/index.json --name GitHub --username and.nik.dev@gmail.com --password ${{ secrets.PKG_SECRET }} --store-password-in-clear-text

    - name: Restore dependencies
      run: dotnet restore

    - name: Upload restore artifacts
      uses: actions/upload-artifact@v3
      with:
        name: restore-artifacts
        path: |
          **/obj/
          **/packages/
          
    - name: Build
      run: dotnet build --configuration Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ./
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./
      
      - name: Run tests
        run: dotnet test --no-restore --verbosity normal

  pack:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./

      - name: Download restore artifacts
        uses: actions/download-artifact@v3
        with:
          name: restore-artifacts
          path: |
            **/obj/
            **/packages/
      
      - name: Pack Bus.Client
        run: dotnet pack ./MailService.Bus.Client/MailService.Bus.Client.csproj --configuration Release --output ./nupkgs

      - name: Pack Bus.Client
        run: dotnet pack ./MailService.Models/MailService.Models.csproj --configuration Release --output ./nupkgs

      - name: Publish Nuget package
        env:
          PKG_SECRET: ${{ secrets.PKG_SECRET }}
          
        run: |
          dotnet nuget push ./nupkgs/*.nupkg --source "GitHub" --api-key $PKG_SECRET --skip-duplicate
